name: Interlisp Toolset Daily Build Action
# Run daily at 0200 hrs
on:
#  schedule:
#    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:

  build_maiko:
    name: Build Maiko Release Package
    runs-on: ubuntu-latest
    steps:
      - name: do something
        run: echo "Build Maiko"

  medleyPushChecker:
    name: Daily Interlisp Push Check and Build
    runs-on: ubuntu-latest
    needs: build_maiko
    outputs:
      desiredTag: ${{ steps.currentName.outputs.medley }}
      cacheHit: ${{ steps.checkSha.outputs.cache-hit }}
      latestTag: ${{ steps.latestMedleyVersion.outputs.latest_tag }}

    steps:
      - name:  Create cache file
        run: |
          mkdir check-SHA
          echo ${{ github.sha }} > github-sha.txt

      - name: Check SHA
        id: checkSha
        uses: actions/cache@v2.1.7
        with:
          path: check-SHA
          key: check-SHA-$${{ github.sha }}

      # Get Medley release information, retrieves the name of the latest
      # release. 
      - name: Get Medley Release Information
        id: latestMedleyVersion
        uses: abatilo/release-info-action@v1.3.0
        with:
          owner: Interlisp
          repo: medley

      - name: Get current Release Name
        id: currentName
        run: |
          echo ::set-output name=medley::"medley-`date +%y%m%d`"

  build_medley:
    needs: medleyPushChecker
    runs-on: ubuntu-latest
    #uses: stumbo/medley/.github/workflows/buildLoadup.yml@v0.11
    if: ( needs.medleyPushChecker.outputs.cacheHit != true)  &&  ( needs.medleyPushChecker.outputs.latestTag !=  needs.medleyPushChecker.outputs.desiredTag )
    steps:
      - run: |
        echo "cacheHit: " ${{ needs.medleyPushChecker.outputs.cacheHit }}
        echo "latestTag: " ${{ needs.medleyPushChecker.outputs.latestTag }}
        echo "currentTag: " ${{ needs.medleyPushChecker.outputs.currentTag }}

  build_docker_container:
    name: Build the Medley docker container
    runs-on: ubuntu-latest
    needs: build_medley
    steps:
      - name: do something
        run: echo "Build Docker Container"

  build_online_medley:
    name: Build the online Medley system
    runs-on: ubuntu-latest
    needs: build_docker_container
    steps:
      - name: do something
        run: echo "Build Online Medley System"
